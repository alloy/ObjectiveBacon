<?xml version="1.0"?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version="0.9">
  <ignored_headers>
    <header>NSSerialization.h</header>
    <header>NSJavaSetup.h</header>
    <header>NSCompatibility.h</header>
    <header>NSUtilities.h</header>
  </ignored_headers>
  <struct name="NSAffineTransformStruct"/>
  <struct name="NSDecimal" opaque="true"/>
  <struct name="NSHashEnumerator"/>
  <struct name="NSHashTableCallBacks"/>
  <struct name="NSMapEnumerator"/>
  <struct name="NSMapTableKeyCallBacks"/>
  <struct name="NSMapTableValueCallBacks"/>
  <struct name="NSPoint"/>
  <struct name="NSRange"/>
  <struct name="NSRect"/>
  <struct name="NSSize"/>
  <struct name="NSSwappedDouble"/>
  <struct name="NSSwappedFloat"/>
  <opaque name="NSZone *"/>
  <function name="NSAllocateObject">
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSCopyHashTableWithZone">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSCopyMapTableWithZone">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSCopyMemoryPages">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSCopyObject">
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSCreateHashTableWithZone">
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSCreateMapTableWithZone">
    <arg index="3" type_modifier="n"/>
  </function>
  <function name="NSDeallocateMemoryPages">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSDecimalAdd">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSDecimalCompact">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSDecimalCompare">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSDecimalCopy">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSDecimalDivide">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSDecimalIsNotANumber">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSDecimalMultiply">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSDecimalMultiplyByPowerOf10">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSDecimalNormalize">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSDecimalPower">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSDecimalRound">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSDecimalString">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSDecimalSubtract">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSDivideRect">
    <arg index="1" type_modifier="o"/>
    <arg index="2" type_modifier="o"/>
  </function>
  <function name="NSEndHashTableEnumeration">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSEndMapTableEnumeration">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSGetSizeAndAlignment">
    <arg index="0" type_modifier="o"/>
    <arg index="1" type_modifier="o"/>
    <arg index="2" type_modifier="o"/>
  </function>
  <function name="NSHashGet">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSHashInsert">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSHashInsertIfAbsent">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSHashInsertKnownAbsent">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSHashRemove">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSLog">
    <arg printf_format="true" index="0"/>
  </function>
  <function name="NSMapGet">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSMapInsert">
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSMapInsertIfAbsent">
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSMapInsertKnownAbsent">
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="n"/>
  </function>
  <function name="NSMapMember">
    <arg index="1" type_modifier="n"/>
    <arg index="2" type_modifier="o"/>
    <arg index="3" type_modifier="o"/>
  </function>
  <function name="NSMapRemove">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSNextHashEnumeratorItem">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSNextMapEnumeratorPair">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="o"/>
    <arg index="2" type_modifier="o"/>
  </function>
  <function name="NSReallocateCollectable">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSRecycleZone">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSSetUncaughtExceptionHandler">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSSetZoneName">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSShouldRetainWithZone">
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSZoneCalloc">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSZoneFree">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <function name="NSZoneFromPointer">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSZoneMalloc">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSZoneName">
    <arg index="0" type_modifier="n"/>
  </function>
  <function name="NSZoneRealloc">
    <arg index="0" type_modifier="n"/>
    <arg index="1" type_modifier="n"/>
  </function>
  <class name="NSAppleEventDescriptor">
    <method class_method="true" selector="descriptorWithDescriptorType:bytes:length:">
      <arg c_array_length_in_arg="2" index="1" type_modifier="n"/>
    </method>
    <method selector="initWithAEDescNoCopy:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method selector="initWithDescriptorType:bytes:length:">
      <arg c_array_length_in_arg="2" index="1" type_modifier="n"/>
    </method>
  </class>
  <class name="NSAppleEventManager">
    <method selector="dispatchRawAppleEvent:withRawReply:handlerRefCon:">
      <arg index="0" type_modifier="n"/>
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector='setEventHandler:andSelector:forEventClass:andEventID:'>
      <arg index='1' sel_of_type="(void)handleAppleEvent:(NSAppleEventDescriptor *)event withReplyEvent:(NSAppleEventDescriptor *)replyEvent"/>
    </method>
  </class>
  <class name="NSAppleScript">
    <method selector="compileAndReturnError:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="executeAndReturnError:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="executeAppleEvent:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="initWithContentsOfURL:error:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSArray">
    <method selector="addObserver:forKeyPath:options:context:">
      <arg index="3" type_modifier="n"/>
    </method>
    <method selector="addObserver:toObjectsAtIndexes:forKeyPath:options:context:">
      <arg index="4" type_modifier="n"/>
    </method>
    <method class_method="true" selector="arrayWithObjects:count:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call the usual object accessors." selector="getObjects:"/>
    <method ignore="true" suggestion="Call the usual object accessors." selector="getObjects:range:"/>
    <method selector="initWithObjects:count:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method selector='makeObjectsPerformSelector:'>
      <arg index='0' sel_of_type="(void)action"/>
    </method>
    <method selector='makeObjectsPerformSelector:withObject:'>
      <arg index='0' sel_of_type="(void)action:(id)sender"/>
    </method>
    <method selector="sortedArrayUsingFunction:context:">
      <arg index="0" type_modifier="n"/>
      <arg index="1" type_modifier="n"/>
    </method>
    <method selector="sortedArrayUsingFunction:context:hint:">
      <arg index="0" type_modifier="n"/>
      <arg index="1" type_modifier="n"/>
    </method>
    <method selector='sortedArrayUsingSelector:'>
      <arg index='0' sel_of_type='(NSComparisonResult)compare:(id)object'/>
    </method>
  </class>
  <class name="NSAssertionHandler">
    <method selector="handleFailureInFunction:file:lineNumber:description:">
      <arg printf_format="true" index="3"/>
    </method>
    <method selector="handleFailureInMethod:object:file:lineNumber:description:">
      <arg printf_format="true" index="4"/>
    </method>
  </class>
  <class name="NSBundle">
    <method selector="loadAndReturnError:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="preflightAndReturnError:">
      <arg index="0" type_modifier="o"/>
    </method>
  </class>
  <class name="NSCalendar">
    <method selector="rangeOfUnit:startDate:interval:forDate:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
  </class>
  <class name="NSCalendarDate">
    <method selector="years:months:days:hours:minutes:seconds:sinceDate:">
      <arg index="0" type_modifier="o"/>
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
      <arg index="3" type_modifier="o"/>
      <arg index="4" type_modifier="o"/>
      <arg index="5" type_modifier="o"/>
    </method>
  </class>
  <class name="NSCoder">
    <method selector="decodeArrayOfObjCType:count:at:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
      <arg index="2" type_modifier="n"/>
    </method>
    <method selector="decodeBytesForKey:returnedLength:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="decodeBytesWithReturnedLength:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="decodeValueOfObjCType:at:">
      <arg index="1" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call decodeValueOfObjCType:at: several times." selector="decodeValuesOfObjCTypes:"/>
    <method selector="encodeArrayOfObjCType:count:at:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
      <arg index="2" type_modifier="n"/>
    </method>
    <method selector="encodeBytes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method selector="encodeBytes:length:forKey:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method selector="encodeValueOfObjCType:at:">
      <arg index="1" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call encodeValueOfObjCType:at: several times." selector="encodeValuesOfObjCTypes:"/>
  </class>
  <class name="NSComparisonPredicate">
    <method selector="initWithLeftExpression:rightExpression:customSelector:">
      <arg sel_of_type="(BOOL)customPredicate:(id)obj" index="2"/>
    </method>
    <method class_method="true" selector="predicateWithLeftExpression:rightExpression:customSelector:">
      <arg sel_of_type="(BOOL)customPredicate:(id)obj" index="2"/>
    </method>
  </class>
  <class name="NSData">
    <method class_method="true" selector="dataWithBytes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method ignore="true" class_method="true" suggestion="Call dataWithBytes:length:." selector="dataWithBytesNoCopy:length:"/>
    <method ignore="true" class_method="true" suggestion="Call dataWithBytes:length:." selector="dataWithBytesNoCopy:length:freeWhenDone:"/>
    <method class_method="true" selector="dataWithContentsOfFile:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method class_method="true" selector="dataWithContentsOfURL:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method ignore="true" suggestion="Call bytes or getBytes:length:." selector="getBytes:"/>
    <method selector="getBytes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="o"/>
    </method>
    <method ignore="true" suggestion="Call bytes or getBytes:length:." selector="getBytes:range:"/>
    <method selector="initWithBytes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call initWithBytes:length:." selector="initWithBytesNoCopy:length:"/>
    <method ignore="true" suggestion="Call initWithBytes:length:." selector="initWithBytesNoCopy:length:freeWhenDone:"/>
    <method selector="initWithContentsOfFile:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithContentsOfURL:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="writeToFile:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="writeToURL:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
  </class>
  <class name="NSDateFormatter">
    <method selector="getObjectValue:forString:range:error:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="N"/>
      <arg index="3" type_modifier="N"/>
    </method>
  </class>
  <class name="NSDictionary">
    <method class_method="true" selector="dictionaryWithObjects:forKeys:count:">
      <arg c_array_length_in_arg="2" index="0" type_modifier="n"/>
      <arg c_array_length_in_arg="2" index="1" type_modifier="n"/>
    </method>
    <method selector="getObjects:andKeys:">
      <arg index="0" type_modifier="o"/>
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="initWithObjects:forKeys:count:">
      <arg c_array_length_in_arg="2" index="0" type_modifier="n"/>
      <arg c_array_length_in_arg="2" index="1" type_modifier="n"/>
    </method>
    <method selector='keysSortedByValueUsingSelector:'>
      <arg index='0' sel_of_type='(NSComparisonResult)compare:(id)object'/>
    </method>
  </class>
  <class name="NSDistantObject">
    <method selector="setProtocolForProxy:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
  <class name='NSDistributedNotificationCenter'>
    <method selector='addObserver:selector:name:object:'>
      <arg index='1' sel_of_type="(void)action:(id)sender"/>
    </method>
    <method selector='addObserver:selector:name:object:suspensionBehavior:'>
      <arg index='1' sel_of_type="(void)action:(id)sender"/>
    </method>
  </class>
  <class name="NSException">
    <method class_method="true" selector="raise:format:">
      <arg printf_format="true" index="1"/>
    </method>
  </class>
  <class name="NSFileManager">
    <method selector="attributesOfFileSystemForPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="attributesOfItemAtPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="contentsOfDirectoryAtPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="copyItemAtPath:toPath:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="createDirectoryAtPath:withIntermediateDirectories:attributes:error:">
      <arg index="3" type_modifier="o"/>
    </method>
    <method selector="createSymbolicLinkAtPath:withDestinationPath:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="destinationOfSymbolicLinkAtPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="fileExistsAtPath:isDirectory:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="linkItemAtPath:toPath:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="moveItemAtPath:toPath:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="removeItemAtPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="setAttributes:ofItemAtPath:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="stringWithFileSystemRepresentation:length:">
      <arg c_array_of_fixed_length="1" index="0" type_modifier="n"/>
    </method>
    <method selector="subpathsOfDirectoryAtPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSFormatter">
    <method selector="getObjectValue:forString:errorDescription:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="isPartialStringValid:newEditingString:errorDescription:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:">
      <arg index="0" type_modifier="o"/>
      <arg index="1" type_modifier="o"/>
      <arg index="4" type_modifier="o"/>
    </method>
  </class>
  <class name="NSIndexPath">
    <method ignore="true" suggestion="Call the usual accessors." selector="getIndexes:"/>
    <method class_method="true" selector="indexPathWithIndexes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method selector="initWithIndexes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSIndexSet">
    <method selector="getIndexes:maxCount:inIndexRange:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
      <arg index="2" type_modifier="N"/>
    </method>
  </class>
  <class name="NSInputStream">
    <method ignore="true" selector="getBuffer:length:"/>
    <method selector="read:maxLength:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="o"/>
    </method>
  </class>
  <class name="NSInvocation">
    <method ignore="true" selector="getArgument:atIndex:"/>
    <method ignore="true" selector="getReturnValue:"/>
    <method selector="setArgument:atIndex:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method selector="setReturnValue:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSKeyedArchiver">
    <method selector="encodeBytes:length:forKey:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSKeyedUnarchiver">
    <method selector="decodeBytesForKey:returnedLength:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSMutableArray">
    <method selector="removeObjectsFromIndices:numIndices:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method selector="sortUsingFunction:context:">
      <arg index="0" type_modifier="n"/>
      <arg index="1" type_modifier="n"/>
    </method>
    <method selector='sortUsingSelector:'>
      <arg index='0' sel_of_type='(NSComparisonResult)compare:(id)object'/>
    </method>
  </class>
  <class name="NSMutableData">
    <method selector="appendBytes:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call replaceBytesInRange:withBytes:length:." selector="replaceBytesInRange:withBytes:"/>
    <method selector="replaceBytesInRange:withBytes:length:">
      <arg c_array_length_in_arg="2" index="1" type_modifier="n"/>
    </method>
  </class>
  <class name="NSMutableString">
    <method selector="appendFormat:">
      <arg printf_format="true" index="0"/>
    </method>
  </class>
  <class name="NSNetService">
    <method selector="getInputStream:outputStream:">
      <arg index="0" type_modifier="o"/>
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name='NSNotificationCenter'>
    <method selector='addObserver:selector:name:object:'>
      <arg index='1' sel_of_type="(void)action:(id)sender"/>
    </method>
  </class>
  <class name="NSNumberFormatter">
    <method selector="getObjectValue:forString:range:error:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="N"/>
      <arg index="3" type_modifier="o"/>
    </method>
  </class>
  <class name="NSObject">
    <method selector="addObserver:forKeyPath:options:context:">
      <arg index="3" type_modifier="n"/>
    </method>
    <method selector="attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:">
      <arg sel_of_type="(void)didPresentErrorWithRecovery:(BOOL)didRecover contextInfo:(void *)contextInfo" index="3"/>
      <arg index="4" type_modifier="n"/>
    </method>
    <method selector="conformsToProtocol:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method selector="countByEnumeratingWithState:objects:count:">
      <arg index="0" type_modifier="n"/>
      <arg c_array_length_in_arg="2" index="1" type_modifier="n"/>
    </method>
    <method selector="handleMachMessage:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method selector="observeValueForKeyPath:ofObject:change:context:">
      <arg index="3" type_modifier="n"/>
    </method>
    <method selector="setObservationInfo:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method selector="spellServer:checkGrammarInString:language:details:">
      <arg index="3" type_modifier="o"/>
    </method>
    <method selector="spellServer:findMisspelledWordInString:language:wordCount:countOnly:">
      <arg index="3" type_modifier="o"/>
    </method>
    <method selector="validateValue:forKey:error:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="validateValue:forKeyPath:error:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector='performSelector:'>
      <arg index='0' sel_of_type="(id)action"/>
    </method>
    <method selector='performSelector:withObject:'>
      <arg index='0' sel_of_type="(id)action:(id)sender"/>
    </method>
    <method selector='performSelector:withObject:withObject:'>
      <arg index='0' sel_of_type="(id)action:(id)sender another:(id)object"/>
    </method>
  </class>
  <class name="NSOutputStream">
    <method selector="initToBuffer:capacity:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="outputStreamToBuffer:capacity:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="o"/>
    </method>
    <method selector="write:maxLength:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSPredicate">
    <method class_method="true" selector="predicateWithFormat:">
      <arg printf_format="true" index="0"/>
    </method>
  </class>
  <class name="NSPropertyListSerialization">
    <method class_method="true" selector="dataFromPropertyList:format:errorDescription:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method class_method="true" selector="propertyListFromData:mutabilityOption:format:errorDescription:">
      <arg index="2" type_modifier="o"/>
      <arg index="3" type_modifier="o"/>
    </method>
  </class>
  <class name="NSProtocolChecker">
    <method selector="initWithTarget:protocol:">
      <arg index="1" type_modifier="n"/>
    </method>
    <method class_method="true" selector="protocolCheckerWithTarget:protocol:">
      <arg index="1" type_modifier="n"/>
    </method>
  </class>
  <class name="NSRunLoop">
    <method selector='performSelector:target:argument:order:modes:'>
      <arg index='0' sel_of_type='(void)action:(id)sender'/>
    </method>
  </class>
  <class name="NSScanner">
    <method selector="scanCharactersFromSet:intoString:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="scanDecimal:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanDouble:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanFloat:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanHexInt:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanInt:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanInteger:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanLongLong:">
      <arg index="0" type_modifier="o"/>
    </method>
    <method selector="scanString:intoString:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="scanUpToCharactersFromSet:intoString:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="scanUpToString:intoString:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name='NSScriptCoercionHandler'>
    <method selector='registerCoercer:selector:toConvertFromClass:toClass:'>
      <arg index='1' sel_of_type="(id)coerceString:(id)value toString:(Class)klass"/>
    </method>
  </class>
  <class name="NSScriptObjectSpecifier">
    <method selector="indicesOfObjectsByEvaluatingWithContainer:count:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSSet">
    <method selector="addObserver:forKeyPath:options:context:">
      <arg index="3" type_modifier="n"/>
    </method>
    <method selector="initWithObjects:count:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="setWithObjects:count:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method selector='makeObjectsPerformSelector:'>
      <arg index='0' sel_of_type="(void)action"/>
    </method>
    <method selector='makeObjectsPerformSelector:withObject:'>
      <arg index='0' sel_of_type="(void)action:(id)sender"/>
    </method>
  </class>
  <class name='NSSortDescriptor'>
    <method selector='initWithKey:ascending:selector:'>
      <arg index='2' sel_of_type='(NSComparisonResult)compare:(id)object'/>
    </method>
  </class>
  <class name="NSStream">
    <method class_method="true" selector="getStreamsToHost:port:inputStream:outputStream:">
      <arg index="2" type_modifier="o"/>
      <arg index="3" type_modifier="o"/>
    </method>
  </class>
  <class name="NSString">
    <method selector="completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="getBytes:maxLength:usedLength:encoding:options:range:remainingRange:">
      <arg index="0" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
      <arg index="6" type_modifier="o"/>
    </method>
    <method selector="getCString:maxLength:encoding:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="o"/>
    </method>
    <method ignore="true" selector="getCharacters:"/>
    <method ignore="true" selector="getCharacters:range:"/>
    <method selector="getFileSystemRepresentation:maxLength:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="o"/>
    </method>
    <method selector="getLineStart:end:contentsEnd:forRange:">
      <arg index="0" type_modifier="o"/>
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="getParagraphStart:end:contentsEnd:forRange:">
      <arg index="0" type_modifier="o"/>
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithBytes:length:encoding:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call initWithBytes:length:encoding:." selector="initWithBytesNoCopy:length:encoding:freeWhenDone:"/>
    <method selector="initWithCString:length:">
      <arg c_array_of_fixed_length="1" index="0" type_modifier="n"/>
    </method>
    <method selector="initWithCharacters:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method ignore="true" suggestion="Call initWithCharacters:length:." selector="initWithCharactersNoCopy:length:freeWhenDone:"/>
    <method selector="initWithContentsOfFile:encoding:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithContentsOfFile:usedEncoding:error:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithContentsOfURL:encoding:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithContentsOfURL:usedEncoding:error:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithFormat:">
      <arg printf_format="true" index="0"/>
    </method>
    <method selector="initWithFormat:locale:">
      <arg printf_format="true" index="0"/>
    </method>
    <method class_method="true" selector="localizedStringWithFormat:">
      <arg printf_format="true" index="0"/>
    </method>
    <method selector="stringByAppendingFormat:">
      <arg printf_format="true" index="0"/>
    </method>
    <method class_method="true" selector="stringWithCString:length:">
      <arg c_array_of_fixed_length="1" index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="stringWithCharacters:length:">
      <arg c_array_length_in_arg="1" index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="stringWithContentsOfFile:encoding:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method class_method="true" selector="stringWithContentsOfFile:usedEncoding:error:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method class_method="true" selector="stringWithContentsOfURL:encoding:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method class_method="true" selector="stringWithContentsOfURL:usedEncoding:error:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="stringWithFormat:">
      <arg printf_format="true" index="0"/>
    </method>
    <method selector="writeToFile:atomically:encoding:error:">
      <arg index="3" type_modifier="o"/>
    </method>
    <method selector="writeToURL:atomically:encoding:error:">
      <arg index="3" type_modifier="o"/>
    </method>
  </class>
  <class name='NSThread'>
    <method class_method='true' selector='detachNewThreadSelector:toTarget:withObject:'>
      <arg index='0' sel_of_type="(void)action:(id)sender"/>
    </method>
    <method selector='initWithTarget:selector:object:'>
      <arg index='1' sel_of_type="(void)action:(id)sender"/>
    </method>
  </class>
  <class name='NSTimer'>
    <method selector='initWithFireDate:interval:target:selector:userInfo:repeats
:'>
      <arg index='3' sel_of_type="(void)myTimerFireMethod:(NSTimer*)theTimer"/>
    </method>
    <method class_method='true' selector='scheduledTimerWithTimeInterval:target:
selector:userInfo:repeats:'>
      <arg index='2' sel_of_type="(void)myTimerFireMethod:(NSTimer*)theTimer"/>
    </method>
    <method class_method='true' selector='timerWithTimeInterval:target:selector:userInfo:repeats:'>
      <arg index='2' sel_of_type="(void)myTimerFireMethod:(NSTimer*)theTimer"/>
    </method>
  </class>
  <class name='NSUndoManager'>
    <method selector='registerUndoWithTarget:selector:object:'>
      <arg index='1' sel_of_type="(void)action:(id)sender"/>
    </method>
  </class>
  <class name="NSURLConnection">
    <method class_method="true" selector="sendSynchronousRequest:returningResponse:error:">
      <arg index="1" type_modifier="o"/>
      <arg index="2" type_modifier="o"/>
    </method>
  </class>
  <class name="NSValue">
    <method ignore="true" selector="getValue:"/>
    <method selector="initWithBytes:objCType:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="value:withObjCType:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="valueWithBytes:objCType:">
      <arg index="0" type_modifier="n"/>
    </method>
    <method class_method="true" selector="valueWithPointer:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSXMLDTD">
    <method selector="initWithContentsOfURL:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithData:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
  </class>
  <class name="NSXMLDocument">
    <method selector="initWithContentsOfURL:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithData:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="initWithXMLString:options:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="objectByApplyingXSLT:arguments:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="objectByApplyingXSLTAtURL:arguments:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="objectByApplyingXSLTString:arguments:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="validateAndReturnError:">
      <arg index="0" type_modifier="o"/>
    </method>
  </class>
  <class name="NSXMLElement">
    <method selector="initWithXMLString:error:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSXMLNode">
    <method selector="nodesForXPath:error:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="objectsForXQuery:constants:error:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="objectsForXQuery:error:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSAttributedString">
    <method selector="attribute:atIndex:effectiveRange:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="attribute:atIndex:longestEffectiveRange:inRange:">
      <arg index="2" type_modifier="o"/>
    </method>
    <method selector="attributesAtIndex:effectiveRange:">
      <arg index="1" type_modifier="o"/>
    </method>
    <method selector="attributesAtIndex:longestEffectiveRange:inRange:">
      <arg index="1" type_modifier="o"/>
    </method>
  </class>
  <class name="NSPort">
    <method class_method="true" selector="allocWithZone:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSProxy">
    <method class_method="true" selector="allocWithZone:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSScriptCommandDescription">
    <method selector="createCommandInstanceWithZone:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
  <class name="NSUnarchiver">
    <method selector="setObjectZone:">
      <arg index="0" type_modifier="n"/>
    </method>
  </class>
</signatures>
